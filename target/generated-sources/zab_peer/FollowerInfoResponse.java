// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zab_peer.proto

package zab_peer;

/**
 * Protobuf type {@code zab_peer.FollowerInfoResponse}
 */
public  final class FollowerInfoResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:zab_peer.FollowerInfoResponse)
    FollowerInfoResponseOrBuilder {
  // Use FollowerInfoResponse.newBuilder() to construct.
  private FollowerInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FollowerInfoResponse() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private FollowerInfoResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            zab.ZxId.Builder subBuilder = null;
            if (lastZxId_ != null) {
              subBuilder = lastZxId_.toBuilder();
            }
            lastZxId_ = input.readMessage(zab.ZxId.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lastZxId_);
              lastZxId_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            zab.Trunc.Builder subBuilder = null;
            if (typeCase_ == 2) {
              subBuilder = ((zab.Trunc) type_).toBuilder();
            }
            type_ =
                input.readMessage(zab.Trunc.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((zab.Trunc) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 2;
            break;
          }
          case 26: {
            zab.Diff.Builder subBuilder = null;
            if (typeCase_ == 3) {
              subBuilder = ((zab.Diff) type_).toBuilder();
            }
            type_ =
                input.readMessage(zab.Diff.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((zab.Diff) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 3;
            break;
          }
          case 34: {
            zab.Snap.Builder subBuilder = null;
            if (typeCase_ == 4) {
              subBuilder = ((zab.Snap) type_).toBuilder();
            }
            type_ =
                input.readMessage(zab.Snap.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((zab.Snap) type_);
              type_ = subBuilder.buildPartial();
            }
            typeCase_ = 4;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return zab_peer.ZabPeer.internal_static_zab_peer_FollowerInfoResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return zab_peer.ZabPeer.internal_static_zab_peer_FollowerInfoResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            zab_peer.FollowerInfoResponse.class, zab_peer.FollowerInfoResponse.Builder.class);
  }

  private int typeCase_ = 0;
  private java.lang.Object type_;
  public enum TypeCase
      implements com.google.protobuf.Internal.EnumLite {
    TRUNC(2),
    DIFF(3),
    SNAP(4),
    TYPE_NOT_SET(0);
    private final int value;
    private TypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static TypeCase forNumber(int value) {
      switch (value) {
        case 2: return TRUNC;
        case 3: return DIFF;
        case 4: return SNAP;
        case 0: return TYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TypeCase
  getTypeCase() {
    return TypeCase.forNumber(
        typeCase_);
  }

  public static final int LAST_ZX_ID_FIELD_NUMBER = 1;
  private zab.ZxId lastZxId_;
  /**
   * <code>optional .zab.ZxId last_zx_id = 1;</code>
   */
  public boolean hasLastZxId() {
    return lastZxId_ != null;
  }
  /**
   * <code>optional .zab.ZxId last_zx_id = 1;</code>
   */
  public zab.ZxId getLastZxId() {
    return lastZxId_ == null ? zab.ZxId.getDefaultInstance() : lastZxId_;
  }
  /**
   * <code>optional .zab.ZxId last_zx_id = 1;</code>
   */
  public zab.ZxIdOrBuilder getLastZxIdOrBuilder() {
    return getLastZxId();
  }

  public static final int TRUNC_FIELD_NUMBER = 2;
  /**
   * <code>optional .zab.Trunc trunc = 2;</code>
   */
  public zab.Trunc getTrunc() {
    if (typeCase_ == 2) {
       return (zab.Trunc) type_;
    }
    return zab.Trunc.getDefaultInstance();
  }
  /**
   * <code>optional .zab.Trunc trunc = 2;</code>
   */
  public zab.TruncOrBuilder getTruncOrBuilder() {
    if (typeCase_ == 2) {
       return (zab.Trunc) type_;
    }
    return zab.Trunc.getDefaultInstance();
  }

  public static final int DIFF_FIELD_NUMBER = 3;
  /**
   * <code>optional .zab.Diff diff = 3;</code>
   */
  public zab.Diff getDiff() {
    if (typeCase_ == 3) {
       return (zab.Diff) type_;
    }
    return zab.Diff.getDefaultInstance();
  }
  /**
   * <code>optional .zab.Diff diff = 3;</code>
   */
  public zab.DiffOrBuilder getDiffOrBuilder() {
    if (typeCase_ == 3) {
       return (zab.Diff) type_;
    }
    return zab.Diff.getDefaultInstance();
  }

  public static final int SNAP_FIELD_NUMBER = 4;
  /**
   * <code>optional .zab.Snap snap = 4;</code>
   */
  public zab.Snap getSnap() {
    if (typeCase_ == 4) {
       return (zab.Snap) type_;
    }
    return zab.Snap.getDefaultInstance();
  }
  /**
   * <code>optional .zab.Snap snap = 4;</code>
   */
  public zab.SnapOrBuilder getSnapOrBuilder() {
    if (typeCase_ == 4) {
       return (zab.Snap) type_;
    }
    return zab.Snap.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (lastZxId_ != null) {
      output.writeMessage(1, getLastZxId());
    }
    if (typeCase_ == 2) {
      output.writeMessage(2, (zab.Trunc) type_);
    }
    if (typeCase_ == 3) {
      output.writeMessage(3, (zab.Diff) type_);
    }
    if (typeCase_ == 4) {
      output.writeMessage(4, (zab.Snap) type_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (lastZxId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLastZxId());
    }
    if (typeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (zab.Trunc) type_);
    }
    if (typeCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (zab.Diff) type_);
    }
    if (typeCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (zab.Snap) type_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof zab_peer.FollowerInfoResponse)) {
      return super.equals(obj);
    }
    zab_peer.FollowerInfoResponse other = (zab_peer.FollowerInfoResponse) obj;

    boolean result = true;
    result = result && (hasLastZxId() == other.hasLastZxId());
    if (hasLastZxId()) {
      result = result && getLastZxId()
          .equals(other.getLastZxId());
    }
    result = result && getTypeCase().equals(
        other.getTypeCase());
    if (!result) return false;
    switch (typeCase_) {
      case 2:
        result = result && getTrunc()
            .equals(other.getTrunc());
        break;
      case 3:
        result = result && getDiff()
            .equals(other.getDiff());
        break;
      case 4:
        result = result && getSnap()
            .equals(other.getSnap());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasLastZxId()) {
      hash = (37 * hash) + LAST_ZX_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLastZxId().hashCode();
    }
    switch (typeCase_) {
      case 2:
        hash = (37 * hash) + TRUNC_FIELD_NUMBER;
        hash = (53 * hash) + getTrunc().hashCode();
        break;
      case 3:
        hash = (37 * hash) + DIFF_FIELD_NUMBER;
        hash = (53 * hash) + getDiff().hashCode();
        break;
      case 4:
        hash = (37 * hash) + SNAP_FIELD_NUMBER;
        hash = (53 * hash) + getSnap().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static zab_peer.FollowerInfoResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static zab_peer.FollowerInfoResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static zab_peer.FollowerInfoResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static zab_peer.FollowerInfoResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(zab_peer.FollowerInfoResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code zab_peer.FollowerInfoResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:zab_peer.FollowerInfoResponse)
      zab_peer.FollowerInfoResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return zab_peer.ZabPeer.internal_static_zab_peer_FollowerInfoResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return zab_peer.ZabPeer.internal_static_zab_peer_FollowerInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              zab_peer.FollowerInfoResponse.class, zab_peer.FollowerInfoResponse.Builder.class);
    }

    // Construct using zab_peer.FollowerInfoResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (lastZxIdBuilder_ == null) {
        lastZxId_ = null;
      } else {
        lastZxId_ = null;
        lastZxIdBuilder_ = null;
      }
      typeCase_ = 0;
      type_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return zab_peer.ZabPeer.internal_static_zab_peer_FollowerInfoResponse_descriptor;
    }

    public zab_peer.FollowerInfoResponse getDefaultInstanceForType() {
      return zab_peer.FollowerInfoResponse.getDefaultInstance();
    }

    public zab_peer.FollowerInfoResponse build() {
      zab_peer.FollowerInfoResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public zab_peer.FollowerInfoResponse buildPartial() {
      zab_peer.FollowerInfoResponse result = new zab_peer.FollowerInfoResponse(this);
      if (lastZxIdBuilder_ == null) {
        result.lastZxId_ = lastZxId_;
      } else {
        result.lastZxId_ = lastZxIdBuilder_.build();
      }
      if (typeCase_ == 2) {
        if (truncBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = truncBuilder_.build();
        }
      }
      if (typeCase_ == 3) {
        if (diffBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = diffBuilder_.build();
        }
      }
      if (typeCase_ == 4) {
        if (snapBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = snapBuilder_.build();
        }
      }
      result.typeCase_ = typeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof zab_peer.FollowerInfoResponse) {
        return mergeFrom((zab_peer.FollowerInfoResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(zab_peer.FollowerInfoResponse other) {
      if (other == zab_peer.FollowerInfoResponse.getDefaultInstance()) return this;
      if (other.hasLastZxId()) {
        mergeLastZxId(other.getLastZxId());
      }
      switch (other.getTypeCase()) {
        case TRUNC: {
          mergeTrunc(other.getTrunc());
          break;
        }
        case DIFF: {
          mergeDiff(other.getDiff());
          break;
        }
        case SNAP: {
          mergeSnap(other.getSnap());
          break;
        }
        case TYPE_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      zab_peer.FollowerInfoResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (zab_peer.FollowerInfoResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int typeCase_ = 0;
    private java.lang.Object type_;
    public TypeCase
        getTypeCase() {
      return TypeCase.forNumber(
          typeCase_);
    }

    public Builder clearType() {
      typeCase_ = 0;
      type_ = null;
      onChanged();
      return this;
    }


    private zab.ZxId lastZxId_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        zab.ZxId, zab.ZxId.Builder, zab.ZxIdOrBuilder> lastZxIdBuilder_;
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public boolean hasLastZxId() {
      return lastZxIdBuilder_ != null || lastZxId_ != null;
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public zab.ZxId getLastZxId() {
      if (lastZxIdBuilder_ == null) {
        return lastZxId_ == null ? zab.ZxId.getDefaultInstance() : lastZxId_;
      } else {
        return lastZxIdBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public Builder setLastZxId(zab.ZxId value) {
      if (lastZxIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lastZxId_ = value;
        onChanged();
      } else {
        lastZxIdBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public Builder setLastZxId(
        zab.ZxId.Builder builderForValue) {
      if (lastZxIdBuilder_ == null) {
        lastZxId_ = builderForValue.build();
        onChanged();
      } else {
        lastZxIdBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public Builder mergeLastZxId(zab.ZxId value) {
      if (lastZxIdBuilder_ == null) {
        if (lastZxId_ != null) {
          lastZxId_ =
            zab.ZxId.newBuilder(lastZxId_).mergeFrom(value).buildPartial();
        } else {
          lastZxId_ = value;
        }
        onChanged();
      } else {
        lastZxIdBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public Builder clearLastZxId() {
      if (lastZxIdBuilder_ == null) {
        lastZxId_ = null;
        onChanged();
      } else {
        lastZxId_ = null;
        lastZxIdBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public zab.ZxId.Builder getLastZxIdBuilder() {
      
      onChanged();
      return getLastZxIdFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    public zab.ZxIdOrBuilder getLastZxIdOrBuilder() {
      if (lastZxIdBuilder_ != null) {
        return lastZxIdBuilder_.getMessageOrBuilder();
      } else {
        return lastZxId_ == null ?
            zab.ZxId.getDefaultInstance() : lastZxId_;
      }
    }
    /**
     * <code>optional .zab.ZxId last_zx_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zab.ZxId, zab.ZxId.Builder, zab.ZxIdOrBuilder> 
        getLastZxIdFieldBuilder() {
      if (lastZxIdBuilder_ == null) {
        lastZxIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zab.ZxId, zab.ZxId.Builder, zab.ZxIdOrBuilder>(
                getLastZxId(),
                getParentForChildren(),
                isClean());
        lastZxId_ = null;
      }
      return lastZxIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        zab.Trunc, zab.Trunc.Builder, zab.TruncOrBuilder> truncBuilder_;
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public zab.Trunc getTrunc() {
      if (truncBuilder_ == null) {
        if (typeCase_ == 2) {
          return (zab.Trunc) type_;
        }
        return zab.Trunc.getDefaultInstance();
      } else {
        if (typeCase_ == 2) {
          return truncBuilder_.getMessage();
        }
        return zab.Trunc.getDefaultInstance();
      }
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public Builder setTrunc(zab.Trunc value) {
      if (truncBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        truncBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public Builder setTrunc(
        zab.Trunc.Builder builderForValue) {
      if (truncBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        truncBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public Builder mergeTrunc(zab.Trunc value) {
      if (truncBuilder_ == null) {
        if (typeCase_ == 2 &&
            type_ != zab.Trunc.getDefaultInstance()) {
          type_ = zab.Trunc.newBuilder((zab.Trunc) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 2) {
          truncBuilder_.mergeFrom(value);
        }
        truncBuilder_.setMessage(value);
      }
      typeCase_ = 2;
      return this;
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public Builder clearTrunc() {
      if (truncBuilder_ == null) {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 2) {
          typeCase_ = 0;
          type_ = null;
        }
        truncBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public zab.Trunc.Builder getTruncBuilder() {
      return getTruncFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    public zab.TruncOrBuilder getTruncOrBuilder() {
      if ((typeCase_ == 2) && (truncBuilder_ != null)) {
        return truncBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 2) {
          return (zab.Trunc) type_;
        }
        return zab.Trunc.getDefaultInstance();
      }
    }
    /**
     * <code>optional .zab.Trunc trunc = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zab.Trunc, zab.Trunc.Builder, zab.TruncOrBuilder> 
        getTruncFieldBuilder() {
      if (truncBuilder_ == null) {
        if (!(typeCase_ == 2)) {
          type_ = zab.Trunc.getDefaultInstance();
        }
        truncBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zab.Trunc, zab.Trunc.Builder, zab.TruncOrBuilder>(
                (zab.Trunc) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 2;
      onChanged();;
      return truncBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        zab.Diff, zab.Diff.Builder, zab.DiffOrBuilder> diffBuilder_;
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public zab.Diff getDiff() {
      if (diffBuilder_ == null) {
        if (typeCase_ == 3) {
          return (zab.Diff) type_;
        }
        return zab.Diff.getDefaultInstance();
      } else {
        if (typeCase_ == 3) {
          return diffBuilder_.getMessage();
        }
        return zab.Diff.getDefaultInstance();
      }
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public Builder setDiff(zab.Diff value) {
      if (diffBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        diffBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public Builder setDiff(
        zab.Diff.Builder builderForValue) {
      if (diffBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        diffBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public Builder mergeDiff(zab.Diff value) {
      if (diffBuilder_ == null) {
        if (typeCase_ == 3 &&
            type_ != zab.Diff.getDefaultInstance()) {
          type_ = zab.Diff.newBuilder((zab.Diff) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 3) {
          diffBuilder_.mergeFrom(value);
        }
        diffBuilder_.setMessage(value);
      }
      typeCase_ = 3;
      return this;
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public Builder clearDiff() {
      if (diffBuilder_ == null) {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 3) {
          typeCase_ = 0;
          type_ = null;
        }
        diffBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public zab.Diff.Builder getDiffBuilder() {
      return getDiffFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    public zab.DiffOrBuilder getDiffOrBuilder() {
      if ((typeCase_ == 3) && (diffBuilder_ != null)) {
        return diffBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 3) {
          return (zab.Diff) type_;
        }
        return zab.Diff.getDefaultInstance();
      }
    }
    /**
     * <code>optional .zab.Diff diff = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zab.Diff, zab.Diff.Builder, zab.DiffOrBuilder> 
        getDiffFieldBuilder() {
      if (diffBuilder_ == null) {
        if (!(typeCase_ == 3)) {
          type_ = zab.Diff.getDefaultInstance();
        }
        diffBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zab.Diff, zab.Diff.Builder, zab.DiffOrBuilder>(
                (zab.Diff) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 3;
      onChanged();;
      return diffBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        zab.Snap, zab.Snap.Builder, zab.SnapOrBuilder> snapBuilder_;
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public zab.Snap getSnap() {
      if (snapBuilder_ == null) {
        if (typeCase_ == 4) {
          return (zab.Snap) type_;
        }
        return zab.Snap.getDefaultInstance();
      } else {
        if (typeCase_ == 4) {
          return snapBuilder_.getMessage();
        }
        return zab.Snap.getDefaultInstance();
      }
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public Builder setSnap(zab.Snap value) {
      if (snapBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
        onChanged();
      } else {
        snapBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public Builder setSnap(
        zab.Snap.Builder builderForValue) {
      if (snapBuilder_ == null) {
        type_ = builderForValue.build();
        onChanged();
      } else {
        snapBuilder_.setMessage(builderForValue.build());
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public Builder mergeSnap(zab.Snap value) {
      if (snapBuilder_ == null) {
        if (typeCase_ == 4 &&
            type_ != zab.Snap.getDefaultInstance()) {
          type_ = zab.Snap.newBuilder((zab.Snap) type_)
              .mergeFrom(value).buildPartial();
        } else {
          type_ = value;
        }
        onChanged();
      } else {
        if (typeCase_ == 4) {
          snapBuilder_.mergeFrom(value);
        }
        snapBuilder_.setMessage(value);
      }
      typeCase_ = 4;
      return this;
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public Builder clearSnap() {
      if (snapBuilder_ == null) {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
          onChanged();
        }
      } else {
        if (typeCase_ == 4) {
          typeCase_ = 0;
          type_ = null;
        }
        snapBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public zab.Snap.Builder getSnapBuilder() {
      return getSnapFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    public zab.SnapOrBuilder getSnapOrBuilder() {
      if ((typeCase_ == 4) && (snapBuilder_ != null)) {
        return snapBuilder_.getMessageOrBuilder();
      } else {
        if (typeCase_ == 4) {
          return (zab.Snap) type_;
        }
        return zab.Snap.getDefaultInstance();
      }
    }
    /**
     * <code>optional .zab.Snap snap = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        zab.Snap, zab.Snap.Builder, zab.SnapOrBuilder> 
        getSnapFieldBuilder() {
      if (snapBuilder_ == null) {
        if (!(typeCase_ == 4)) {
          type_ = zab.Snap.getDefaultInstance();
        }
        snapBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            zab.Snap, zab.Snap.Builder, zab.SnapOrBuilder>(
                (zab.Snap) type_,
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      typeCase_ = 4;
      onChanged();;
      return snapBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:zab_peer.FollowerInfoResponse)
  }

  // @@protoc_insertion_point(class_scope:zab_peer.FollowerInfoResponse)
  private static final zab_peer.FollowerInfoResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new zab_peer.FollowerInfoResponse();
  }

  public static zab_peer.FollowerInfoResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FollowerInfoResponse>
      PARSER = new com.google.protobuf.AbstractParser<FollowerInfoResponse>() {
    public FollowerInfoResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new FollowerInfoResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FollowerInfoResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FollowerInfoResponse> getParserForType() {
    return PARSER;
  }

  public zab_peer.FollowerInfoResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

